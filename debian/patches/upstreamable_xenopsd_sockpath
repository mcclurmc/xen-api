--- a/ocaml/xenops/xenops_client.ml
+++ b/ocaml/xenops/xenops_client.ml
@@ -20,7 +20,7 @@
 open D
 module E = Debug.Debugger(struct let name = "mscgen" end)
 
-let default_path = "/var/xapi/xenopsd"
+let default_path = "/var/lib/xcp/xenopsd"
 let forwarded_path = default_path ^ ".forwarded"
 
 let default_uri = "file:" ^ default_path
--- a/ocaml/xenops/xenopsd.ml
+++ b/ocaml/xenops/xenopsd.ml
@@ -77,7 +77,7 @@
 let socket : Http_svr.socket option ref = ref None
 let server = Http_svr.Server.empty (Xenops_server.make_context ())
 
-let path = "/var/xapi/xenopsd"
+let path = Filename.concat Fhs.vardir "xenopsd"
 let forwarded_path = path  ^ ".forwarded" (* receive an authenticated fd from xapi *)
 let json_path = path ^ ".json"
 
--- a/ocaml/xapi/storage_impl.ml
+++ b/ocaml/xapi/storage_impl.ml
@@ -831,7 +831,7 @@
 end
 
 open Xmlrpc_client
-let local_url = Http.Url.(File { path = "/var/xapi/storage" }, { uri = "/"; query_params = [] })
+let local_url = Http.Url.(File { path = Filename.concat Fhs.vardir "storage" }, { uri = "/"; query_params = [] })
 
 let rpc ~srcstr ~dststr url call =
 	XMLRPC_protocol.rpc ~transport:(transport_of_url url)
--- a/ocaml/xapi/storage_migrate.ml
+++ b/ocaml/xapi/storage_migrate.ml
@@ -24,7 +24,7 @@
 open Xmlrpc_client
 open Threadext
 
-let local_url = Http.Url.(File { path = "/var/xapi/storage" }, { uri = "/"; query_params = [] })
+let local_url = Http.Url.(File { path = Filename.concat Fhs.vardir "storage" }, { uri = "/"; query_params = [] })
 let remote_url ip = Http.Url.(Http { host=ip; auth=None; port=None; ssl=true }, { uri = "/services/SM"; query_params=["pool_secret",!Xapi_globs.pool_secret] } )
 
 open Storage_interface
--- a/ocaml/xapi/xapi_services.ml
+++ b/ocaml/xapi/xapi_services.ml
@@ -113,7 +113,7 @@
 		(fun __context ->
 			match String.split '/' req.Http.Request.uri with
 				| "" :: services :: "xenops" :: _ when services = _services ->
-					ignore (hand_over_connection req s "/var/xapi/xenopsd.forwarded")
+					ignore (hand_over_connection req s (Filename.concat Fhs.vardir "xenopsd.forwarded"))
 				| "" :: services :: "plugin" :: name :: _ when services = _services ->
 					http_proxy_to_plugin req s name
 				| "" :: services :: "driver" :: uuid :: ty :: instance :: rest when services = _services ->
@@ -127,7 +127,7 @@
 
 
 let rpc ~srcstr ~dststr call =
-	let url = Http.Url.(File { path = "/var/xapi/storage" }, { uri = "/"; query_params = [] }) in
+	let url = Http.Url.(File { path = Filename.concat Fhs.vardir "storage" }, { uri = "/"; query_params = [] }) in
 	let open Xmlrpc_client in
 	XMLRPC_protocol.rpc ~transport:(transport_of_url url) ~srcstr ~dststr
 		~http:(xmlrpc ~version:"1.0" ?auth:(Http.Url.auth_of url) ~query:(Http.Url.get_query_params url) (Http.Url.get_uri url)) call
@@ -139,7 +139,7 @@
 		(fun __context ->
 			match String.split '/' req.Http.Request.uri with
 				| "" :: services :: "xenops" :: _ when services = _services ->
-					ignore (hand_over_connection req s "/var/xapi/xenopsd.forwarded")
+					ignore (hand_over_connection req s (Filename.concat Fhs.vardir "xenopsd.forwarded"))
 				| "" :: services :: "plugin" :: name :: _ when services = _services ->
 					http_proxy_to_plugin req s name
 				| "" :: services :: "driver" :: uuid :: ty :: instance :: rest when services = _services ->
--- a/ocaml/xapi/xapi_vm_migrate.ml
+++ b/ocaml/xapi/xapi_vm_migrate.ml
@@ -668,7 +668,7 @@
 					let memory_limit = free_memory_required_kib |> Memory.bytes_of_kib |> Int64.to_string in
 					let req = Http.Request.make ~cookie:["dbg", dbg; "instance_id", "upgrade"; "memory_limit", memory_limit]
 						~user_agent:"xapi" Http.Put uri in
-					let path = "/var/xapi/xenopsd.forwarded" in
+					let path = Filename.concat Fhs.vardir "xenopsd.forwarded" in
 					let response = Xapi_services.hand_over_connection req fd path in
 					begin match response with
 						| Some task ->
--- a/ocaml/xenops-cli/test.ml
+++ b/ocaml/xenops-cli/test.ml
@@ -25,7 +25,7 @@
 open Xmlrpc_client
 
 
-let default_path = "/var/xapi/xenopsd"
+let default_path = Filename.concat Fhs.vardir "xenopsd"
 let transport = ref (Unix default_path)
 
 open Xenops_interface
--- a/ocaml/xenops/memory_interface.ml
+++ b/ocaml/xenops/memory_interface.ml
@@ -16,7 +16,7 @@
  *)
 
 let service_name = "memory"
-let json_path = "/var/xapi/memory.json"
+let json_path = Filename.concat Fhs.vardir "memory.json"
 
 type reservation_id = string
 
--- a/ocaml/xenops/xenops_server_xen.ml
+++ b/ocaml/xenops/xenops_server_xen.ml
@@ -230,7 +230,7 @@
 			let open Xmlrpc_client in
 			retry_econnrefused 10
 				(fun () ->
-					XMLRPC_protocol.rpc ~srcstr:"xenops" ~dststr:"smapiv2" ~transport:(Unix "/var/xapi/storage") ~http:(xmlrpc ~version:"1.0" "/") call
+					XMLRPC_protocol.rpc ~srcstr:"xenops" ~dststr:"smapiv2" ~transport:(Unix (Filename.concat Fhs.vardir "storage")) ~http:(xmlrpc ~version:"1.0" "/") call
 				)
 	end)
 
--- a/ocaml/xenops-cli/OMakefile
+++ b/ocaml/xenops-cli/OMakefile
@@ -1,5 +1,5 @@
-OCAML_LIBS    = ../xenops/xenops_client
-OCAMLINCLUDES = ../xenops ../util
+OCAML_LIBS    = ../xenops/xenops_client ../fhs
+OCAMLINCLUDES = ../xenops ../util ..
 OCAMLPACKS    = xml-light2 stdext stunnel log http-svr oUnit
 
 UseCamlp4(rpc-light.syntax, xn_cfg_types)
